{"version":3,"sources":["WebPlayback.jsx","Login.js","MoodDetection.jsx","App.js","index.js"],"names":["faceapi","monkeyPatch","Video","HTMLVideoElement","track","name","album","images","url","artists","WebPlayback","props","is_paused","setPaused","useState","is_active","setActive","player","setPlayer","undefined","current_track","setTrack","useEffect","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","cb","token","volume","addListener","_ref","device_id","console","log","_ref2","state","track_window","paused","genre","axios","get","params","q","type","headers","Authorization","concat","data","tracks","items","error","searchSongsByGenre","emotion","then","response","uri","encodeURIComponent","post","queueTrack","result","catch","getCurrentState","connect","_jsx","children","className","_jsxs","alt","onClick","togglePlay","_Fragment","style","color","Login","href","MoodDetection","setEmotion","videoRef","useRef","startVideo","loadModels","Promise","all","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","faceDetection","navigator","mediaDevices","getUserMedia","video","currentStream","current","srcObject","err","setInterval","detections","withFaceLandmarks","withFaceExpressions","expressions","maxExpression","maxProbability","expression","probability","crossOrigin","ref","autoPlay","Canvas","HTMLCanvasElement","Image","HTMLImageElement","ImageData","createCanvasElement","createImageElement","App","setToken","content","fetch","json","access_token","getToken","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.13d837b9.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from \"react\";\nimport axios from \"axios\";\nimport * as faceapi from \"face-api.js\";\n\nfaceapi.env.monkeyPatch({\n  Video: HTMLVideoElement,\n});\n\nconst track = {\n  name: \"\",\n  album: {\n    images: [{ url: \"\" }],\n  },\n  artists: [{ name: \"\" }],\n};\n\nfunction WebPlayback(props) {\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [player, setPlayer] = useState(undefined);\n  const [current_track, setTrack] = useState(track);\n\n  async function searchSongsByGenre(genre) {\n    try {\n      const response = await axios.get(\"https://api.spotify.com/v1/search\", {\n        params: {\n          q: genre,\n          type: \"track\",\n        },\n        headers: {\n          Authorization: `Bearer ${props.token}`,\n        },\n      });\n\n      return response.data.tracks.items;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      throw error;\n    }\n  }\n\n  async function queueTrack(uri, token) {\n    try {\n      const url = `https://api.spotify.com/v1/me/player/queue?uri=${encodeURIComponent(\n        uri\n      )}`;\n      const response = await axios.post(url, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error(\"Error:\", error.response.data);\n      throw error;\n    }\n  }\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: \"Web Playback SDK\",\n        getOAuthToken: (cb) => {\n          cb(props.token);\n        },\n        volume: 0.7,\n      });\n\n      setPlayer(player);\n\n      player.addListener(\"ready\", ({ device_id }) => {\n        console.log(\"Ready with Device ID\", device_id);\n      });\n\n      player.addListener(\"not_ready\", ({ device_id }) => {\n        console.log(\"Device ID has gone offline\", device_id);\n      });\n\n      player.addListener(\"player_state_changed\", (state) => {\n        if (!state) {\n          return;\n        }\n\n        setTrack(state.track_window.current_track);\n        setPaused(state.paused);\n\n        // happy - happy\n        // surprise - surprise\n        // neutral - lofi\n        // angry - bon jovi\n        searchSongsByGenre(props.emotion).then((response) =>\n          queueTrack(response[0].uri, props.token)\n            .then((result) => {\n              console.log(\"Success:\", result);\n            })\n            .catch((error) => {\n              console.error(\"Error:\", error);\n            })\n        );\n\n        player.getCurrentState().then((state) => {\n          !state ? setActive(false) : setActive(true);\n        });\n      });\n\n      player.connect();\n    };\n  }, []);\n\n  if (!is_active) {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"main-wrapper\">\n            <b style={{ color: \"white\" }}>\n              {\" \"}\n              Instance not active. Transfer your playback using your Spotify app{\" \"}\n            </b>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"main-wrapper\">\n            <img\n              src={current_track.album.images[0].url}\n              className=\"now-playing__cover\"\n              alt=\"\"\n            />\n\n            <div className=\"now-playing__side\">\n              <div className=\"now-playing__name\">{current_track.name}</div>\n              <div className=\"now-playing__artist\">\n                {current_track.artists[0].name}\n              </div>\n\n              <button\n                className=\"spotify-btn\"\n                onClick={() => {\n                  player.togglePlay();\n                }}\n              >\n                {is_paused ? \"PLAY\" : \"PAUSE\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WebPlayback;\n","import React from \"react\";\n\nfunction Login() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <a className=\"login\" href=\"/auth/login\">\n            <img\n              src=\"https://cdn.discordapp.com/attachments/1213605380219736204/1213965710833754132/image.png?ex=65f764ab&is=65e4efab&hm=c82406467b6fc7787c080d92ae7337571de3037f517de7d829875fc359a7d591&\"\n              className=\"cowgo\"\n            />\n          </a>\n        </div>\n        <div className=\"title-text\">Moosic</div>\n      </header>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport * as faceapi from \"face-api.js\";\nimport WebPlayback from \"./WebPlayback\";\n\nfaceapi.env.monkeyPatch({\n  Canvas: HTMLCanvasElement,\n  Image: HTMLImageElement,\n  ImageData: ImageData,\n  Video: HTMLVideoElement,\n  createCanvasElement: () => document.createElement(\"canvas\"),\n  createImageElement: () => document.createElement(\"img\"),\n});\n\nexport default function MoodDetection({emotion, setEmotion}) {\n  const videoRef = useRef();\n\n  useEffect(() => {\n    startVideo();\n\n    videoRef && loadModels();\n  }, []);\n\n  const loadModels = () => {\n    Promise.all([\n      faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\n      faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\n      faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"),\n      faceapi.nets.faceExpressionNet.loadFromUri(\"/models\"),\n    ]).then(() => {\n      faceDetection();\n    });\n  };\n\n  const startVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((currentStream) => {\n        videoRef.current.srcObject = currentStream;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const faceDetection = async () => {\n    setInterval(async () => {\n      const detections = await faceapi\n        .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\n        .withFaceLandmarks()\n        .withFaceExpressions();\n      console.log(detections[0].expressions);\n\n      let maxExpression = \"\";\n      let maxProbability = -1;\n\n      for (const expression in detections[0].expressions) {\n        const probability = detections[0].expressions[expression];\n\n        if (probability > maxProbability) {\n          maxProbability = probability;\n          maxExpression = expression;\n        }\n      }\n      console.log(maxExpression);\n      setEmotion(maxExpression);\n\n      // Process or handle detections here\n    }, 1000); // Adjust the interval (in milliseconds) as needed\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      <div>\n        <h1 className=\"flex justify-center text-inherit px-20 text-5xl\">\n          You are feeling <h1 className=\"font-bold ml-2\">{emotion}</h1>{\" \"}\n        </h1>\n      </div>\n      <div>\n        <div>\n          <video\n            className=\"hidden\"\n            crossOrigin=\"anonymous\"\n            ref={videoRef}\n            autoPlay\n          ></video>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport WebPlayback from \"./WebPlayback\";\nimport Login from \"./Login\";\nimport \"./App.css\";\nimport MoodDetection from \"./MoodDetection\";\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  const [emotion, setEmotion] = useState(\"\");\n\n  useEffect(() => {\n    async function getToken() {\n      const response = await fetch(\"/auth/token\");\n      const json = await response.json();\n      setToken(json.access_token);\n    }\n\n    getToken();\n  }, []);\n\n  let content;\n  if (token === \"\") {\n    content = <Login />;\n  } else if (emotion === \"\") {\n    content = <MoodDetection emotion={emotion} setEmotion={setEmotion} />;\n  } else {\n    content = <WebPlayback token={token} emotion={emotion} />;\n  }\n\n  return content;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}